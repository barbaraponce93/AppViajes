// Generated by view binder compiler. Do not edit!
package com.example.movilproyectofinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movilproyectofinal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSliderPostBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivSliderImage;

  @NonNull
  public final TextView tvPostDate;

  @NonNull
  public final TextView tvPostDescription;

  @NonNull
  public final TextView tvPostTitle;

  private ItemSliderPostBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivSliderImage,
      @NonNull TextView tvPostDate, @NonNull TextView tvPostDescription,
      @NonNull TextView tvPostTitle) {
    this.rootView = rootView;
    this.ivSliderImage = ivSliderImage;
    this.tvPostDate = tvPostDate;
    this.tvPostDescription = tvPostDescription;
    this.tvPostTitle = tvPostTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSliderPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSliderPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_slider_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSliderPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_slider_image;
      ImageView ivSliderImage = ViewBindings.findChildViewById(rootView, id);
      if (ivSliderImage == null) {
        break missingId;
      }

      id = R.id.tv_post_date;
      TextView tvPostDate = ViewBindings.findChildViewById(rootView, id);
      if (tvPostDate == null) {
        break missingId;
      }

      id = R.id.tv_post_description;
      TextView tvPostDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvPostDescription == null) {
        break missingId;
      }

      id = R.id.tv_post_title;
      TextView tvPostTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvPostTitle == null) {
        break missingId;
      }

      return new ItemSliderPostBinding((LinearLayout) rootView, ivSliderImage, tvPostDate,
          tvPostDescription, tvPostTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
